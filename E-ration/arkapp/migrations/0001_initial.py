# Generated by Django 4.2.6 on 2023-10-30 16:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=50)),
                ('shop_number', models.CharField(max_length=50)),
                ('card_number', models.IntegerField()),
                ('item', models.CharField(max_length=20)),
                ('quantity', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('booking_date', models.DateField(auto_now=True)),
                ('pickup_time', models.TimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'approved'), ('delivered', 'delivered')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='customerdetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopowner', models.CharField(default='shopowner', max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('cardnumber', models.IntegerField()),
                ('cardtype', models.CharField(max_length=10)),
                ('cardcolor', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='itemlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=20)),
                ('shopowner', models.CharField(default='shopowner', max_length=25)),
                ('quantity', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=10)),
                ('card_number', models.IntegerField(default=0)),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=50)),
                ('occu', models.CharField(max_length=50)),
                ('relation', models.CharField(max_length=50)),
                ('approve', models.CharField(default='decline', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='shopreg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(default='address', max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('licence', models.CharField(default='licence number', max_length=50)),
                ('shop_number', models.CharField(default='shop number', max_length=50, unique=True)),
                ('contact_number', models.IntegerField(default=0)),
                ('place', models.CharField(default='place', max_length=50)),
                ('approve', models.CharField(default='declined', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='carditem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardcolor', models.CharField(max_length=10)),
                ('quantity', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arkapp.itemlist')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('cardnumber', models.CharField(max_length=16)),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('address', models.CharField(default='address', max_length=50)),
                ('place', models.CharField(default='place', max_length=50)),
                ('houseno', models.IntegerField(default=0)),
                ('membersno', models.IntegerField(default=0)),
                ('cardtype', models.CharField(default='type', max_length=50)),
                ('cardcolor', models.CharField(default='color', max_length=50)),
                ('phoneno', models.IntegerField(default=0)),
                ('approve', models.CharField(default='declined', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
